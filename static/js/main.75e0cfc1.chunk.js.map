{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedkey","handleKeyPressed","event","key","setState","currentState","document","addEventListener","this","removeEventListener","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"2NAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,MAFhB,EAaEC,iBAAmB,SAACC,GAClB,IAAQC,EAAQD,EAARC,IAER,EAAKC,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,IAEZL,WAAYG,QAlBlB,uDAKE,WACEG,SAASC,iBAAiB,QAASC,KAAKP,oBAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,oBAV/C,oBAsBE,WACE,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIF,KAAKT,MAAMC,WAAX,mCACgCQ,KAAKT,MAAMC,WAD3C,KAEI,kCA7BhB,GAAyBW,IAAMC,e,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.75e0cfc1.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.PureComponent {\n  state = {\n    pressedkey: null,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyPressed);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyPressed);\n  }\n\n  handleKeyPressed = (event: KeyboardEvent) => {\n    const { key } = event;\n\n    this.setState((currentState) => ({\n      ...currentState,\n      pressedkey: key,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            this.state.pressedkey\n              ? `The last pressed key is [${this.state.pressedkey}]`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}